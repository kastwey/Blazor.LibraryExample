@using Blazor.LibraryExample.Shared.Entities
@using Blazor.LibraryExample.Client.Dtos
@using System.Text.RegularExpressions
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

@if (PaginationInfo != null && PaginationInfo.TotalRows > 0)
{
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @for (int i = 1; i <= PaginationInfo.TotalPages; i++)
            {
                <li class="page-item @(i == PaginationInfo.CurrentPage ? "active" : string.Empty)">
                    @if (i == PaginationInfo.CurrentPage)
                    {
                        <a class="page-link">@i</a>
                    }
                    else
                    {
                        <a class="page-link" href="@GetUri(i)">@i</a>
                    }
                </li>
            }
        </ul>
    </nav>
}

@functions
{
[Parameter] PaginatedResultsMetadataDto PaginationInfo { get; set; }

[Parameter] string QueryStringKey { get; set; }

private string GetUri(int pageNumber)
{
    var uri = new Uri(UriHelper.GetAbsoluteUri());
    string newUri = uri.AbsolutePath + uri.Query ?? String.Empty;
    if (!String.IsNullOrWhiteSpace(QueryStringKey))
    {
        newUri = Regex.Replace(newUri, $@"{QueryStringKey}=\d+?", m => $"{QueryStringKey}={pageNumber}");
        if (!newUri.Contains(QueryStringKey))
        {
            newUri += (newUri.Contains("?") ? "&" : "?") + $"{QueryStringKey}={pageNumber}";
        }
        return newUri;
    }
    if (Regex.IsMatch(newUri, @"^.+?/\d+$"))
    {
        newUri = newUri.Substring(0, newUri.LastIndexOf("/"));
    }
    newUri = newUri.TrimEnd(new char[] { '/' });
    newUri += "/" + pageNumber;
    if (!String.IsNullOrWhiteSpace(uri.Query))
    {
        newUri += "?" + uri.Query;
    }
    return newUri;
}
}
