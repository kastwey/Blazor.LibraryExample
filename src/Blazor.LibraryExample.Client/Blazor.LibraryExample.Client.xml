<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blazor.LibraryExample.Client</name>
    </assembly>
    <members>
        <member name="T:Blazor.LibraryExample.Client.Contracts.Services.IBookService">
            <summary>
            interface to abstract several book services
            </summary>
        </member>
        <member name="M:Blazor.LibraryExample.Client.Contracts.Services.IBookService.Validate(Blazor.LibraryExample.Shared.Entities.Book)">
            <summary>
            Validates the specified book.
            </summary>
            <param name="book">The book.</param>
            <returns>A list with all errors found</returns>
        </member>
        <member name="T:Blazor.LibraryExample.Client.Dtos.PaginatedResultsDto`1">
            <summary>
            Class which encapsulate information about paginated result
            </summary>
            <typeparam name="TItem">the type of object that will be stored as IEnumerable TItem in the Result property.</typeparam>
        </member>
        <member name="M:Blazor.LibraryExample.Client.Dtos.PaginatedResultsDto`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Blazor.LibraryExample.Client.Dtos.PaginatedResultsDto`1"/> class.
            </summary>
        </member>
        <member name="P:Blazor.LibraryExample.Client.Dtos.PaginatedResultsDto`1.Results">
            <summary>
            Gets or sets the results.
            </summary>
            <value>
            The results.
            </value>
        </member>
        <member name="P:Blazor.LibraryExample.Client.Dtos.PaginatedResultsDto`1.PaginationInfo">
            <summary>
            Gets or sets the pagination information.
            </summary>
            <value>
            The pagination information.
            </value>
        </member>
        <member name="T:Blazor.LibraryExample.Client.Dtos.PaginatedResultsMetadataDto">
            <summary>
            Class to store information about current pagination
            </summary>
        </member>
        <member name="P:Blazor.LibraryExample.Client.Dtos.PaginatedResultsMetadataDto.CurrentPage">
            <summary>
            Gets or sets the current page.
            </summary>
            <value>
            The current page.
            </value>
        </member>
        <member name="P:Blazor.LibraryExample.Client.Dtos.PaginatedResultsMetadataDto.ResultsPerPage">
            <summary>
            Gets or sets the results per page.
            </summary>
            <value>
            The results per page.
            </value>
        </member>
        <member name="P:Blazor.LibraryExample.Client.Dtos.PaginatedResultsMetadataDto.TotalPages">
            <summary>
            Gets or sets the total pages.
            </summary>
            <value>
            The total pages.
            </value>
        </member>
        <member name="P:Blazor.LibraryExample.Client.Dtos.PaginatedResultsMetadataDto.TotalRows">
            <summary>
            Gets or sets the total rows.
            </summary>
            <value>
            The total rows.
            </value>
        </member>
        <member name="P:Blazor.LibraryExample.Client.Dtos.PaginatedResultsMetadataDto.HasPreviousPage">
            <summary>
            Gets or sets a value indicating whether this instance has previous page.
            </summary>
            <value>
              <c>true</c> if this instance has previous page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Blazor.LibraryExample.Client.Dtos.PaginatedResultsMetadataDto.HasNextPage">
            <summary>
            Gets or sets a value indicating whether this instance has next page.
            </summary>
            <value>
              <c>true</c> if this instance has next page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Blazor.LibraryExample.Client.Dtos.PaginatedResultsMetadataDto.ResultsFrom">
            <summary>
            Gets or sets the results from.
            </summary>
            <value>
            The results from.
            </value>
        </member>
        <member name="P:Blazor.LibraryExample.Client.Dtos.PaginatedResultsMetadataDto.ResultsTo">
            <summary>
            Gets or sets the results to.
            </summary>
            <value>
            The results to.
            </value>
        </member>
        <member name="T:Blazor.LibraryExample.Client.Program">
            <summary>
            The program class
            </summary>
        </member>
        <member name="M:Blazor.LibraryExample.Client.Program.Main(System.String[])">
            <summary>
            Defines the entry point of the application.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Blazor.LibraryExample.Client.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates the host builder.
            </summary>
            <param name="args">The arguments.</param>
            <returns><see cref="T:Microsoft.AspNetCore.Blazor.Hosting.IWebAssemblyHostBuilder"/></returns>
        </member>
        <member name="T:Blazor.LibraryExample.Client.Services.BookService">
            <summary>
            Class to implement book services
            </summary>
        </member>
        <member name="M:Blazor.LibraryExample.Client.Services.BookService.Validate(Blazor.LibraryExample.Shared.Entities.Book)">
            <summary>
            Validates the specified book.
            </summary>
            <param name="book">The book.</param>
            <returns>All errors found</returns>
        </member>
        <member name="T:Blazor.LibraryExample.Client.Startup">
            <summary>
            The application startup class
            </summary>
        </member>
        <member name="M:Blazor.LibraryExample.Client.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the services.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:Blazor.LibraryExample.Client.Startup.Configure(Microsoft.AspNetCore.Blazor.Builder.IBlazorApplicationBuilder)">
            <summary>
            Configures the application.
            </summary>
            <param name="app">The blazor application.</param>
        </member>
        <member name="M:Blazor.LibraryExample.Client.CustomPage.OnAfterRenderAsync">
            <summary>
            Method invoked after each time the component has been rendered. Note that the component does
            not automatically re-render after the completion of any returned <see cref="T:System.Threading.Tasks.Task" />, because
            that would cause an infinite render loop.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> representing any asynchronous operation, or <see langword="null" />.
            </returns>
        </member>
        <member name="M:Blazor.LibraryExample.Client.CustomPage.DoDefaultFocus">
            <summary>
            Perform focus on specified element, or, if it isn't specified, do focus in first header of level 2.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Blazor.LibraryExample.Client.CustomPage.LocationChanged(System.Object,System.String)">
            <summary>
            Method executed when location changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="location">The location.</param>
        </member>
        <member name="M:Blazor.LibraryExample.Client.CustomPage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
    </members>
</doc>
